openapi: 3.0.0
info:
  description: This is the swagger API for Field_Information
  version: 1.0.0
  title: Field_Information
  termsOfService: http://swagger.io/terms/
  contact:
    email: darren.mannuela@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
- description: Field_Information
  url: http://localhost:8080/api/v1
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/DarrenMannuela/Field_Information/1.0.0
tags:
- name: Afe
  description: All endpoints related to get Field_Information AFE
- name: Workspace
  description: All endpoints related to Field_Information Workspace
- name: Field Information
  description: All endpoints related to Field_Information
- name: Field Information Dummy Data
  description: All endpoints related to Field_Information
paths:
  /Field-Information-afe:
    get:
      security:
      - Authorization: []
      tags:
      - Afe
      summary: Get Field_Information AFE
      responses:
        '200':
          description: get Field_Information AFE data to be returned
          content:
            application/json:
              example:
                afe_number: 1
                workspace_name: LoremIpsum
                kkks_name: LoremIpsum
                working_area: LoremIpsum
                submission_type: Lorem
                data_type: Field Information
    post:
      security:
      - Authorization: []
      tags:
      - Afe
      summary: Post a new Field_Information AFE
      description: Create a new Field_Information AFE data
      requestBody:
        required: true
        description: Request body to create Field_Information AFE data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field_Information'
            example:
              afe_number: 1
              workspace_name: LoremIpsum
              kkks_name: LoremIpsum
              working_area: LoremIpsum
              submission_type: Lorem
              data_type: Field Information
      responses:
        '200':
          description: Field_Information data is added
          content:
            application/json:
              example:
                message: The Field_Information AFE data was successfully added
  /Field-Information-afe/{afe}:
    parameters:
    - in: path
      name: afe
      required: true
      description: afe of Field_Information data to fetch
      schema:
        type: interger
    get:
      security:
      - Authorization: []
      tags:
      - Afe
      summary: Get Field_Information AFE
      responses:
        '200':
          description: get Field_Information AFE data to be returned
          content:
            application/json:
              example:
                afe_number: 1
                workspace_name: LoremIpsum
                kkks_name: LoremIpsum
                working_area: LoremIpsum
                submission_type: Lorem
                data_type: Field Information
    put:
      security:
      - Authorization: []
      tags:
      - Afe
      summary: Update a new Field_Information AFE data
      description: Update a new Field_Information data
      requestBody:
        required: true
        description: Request body to update Field_Information AFE data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field_Information'
            example:
              afe_number: 1
              workspace_name: LoremIpsum
              kkks_name: LoremIpsum
              working_area: LoremIpsum
              submission_type: Lorem
              data_type: Field Information
      responses:
        '200':
          description: Field_Information data is completely updated
          content:
            application/json:
              example:
                message: The Field_Information AFE data is completely updated
    patch:
      security:
      - Authorization: []
      tags:
      - Afe
      summary: Update a new Field_Information AFE data
      description: Update a new Field_Information data
      requestBody:
        required: true
        description: Request body to update Field_Information AFE data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field_Information'
            example:
              afe_number: 1
              workspace_name: LoremIpsum
              kkks_name: LoremIpsum
              working_area: LoremIpsum
              submission_type: Lorem
              data_type: Field Information
      responses:
        '200':
          description: one row in Field_Information data is updated
          content:
            application/json:
              example:
                message: The one row in Field_Information AFE data is updated
    delete:
      security:
      - Authorization: []
      tags:
      - Afe
      summary: Delete Field_Information AFE data
      description: Delete Field_Information AFE data
      responses:
        '200':
          description: Field_Information AFE data is deleted
          content:
            application/json:
              example:
                message: The Field_Information AFE data was successfully deleted
  /Field-Information-workspace:
    get:
      security:
      - Authorization: []
      tags:
      - Workspace
      summary: Get Field_Information Workspace
      responses:
        '200':
          description: get Field_Information Workspace data to be returned
          content:
            application/json:
              example:
                Id: 1
                Afe_number: 1
                Fi_id: 1
    post:
      security:
      - Authorization: []
      tags:
      - Workspace
      summary: Post a new Field_Information Workspace
      description: Create a new Field_Information Workspace data
      requestBody:
        required: true
        description: Request body to create Field_Information Workspace data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field_Information'
            example:
              Id: 1
              Afe_number: 1
              Fi_id: 1
      responses:
        '200':
          description: Field_Information Workspace data is added
          content:
            application/json:
              example:
                message: The Field_Information Workspace data was successfully added
  /Field-Information-workspace/{afe}}:
    parameters:
    - in: path
      name: afe
      required: true
      description: afe of Field_Information data to fetch
      schema:
        type: interger
    get:
      security:
      - Authorization: []
      tags:
      - Workspace
      summary: Get Field_Information Workspace
      responses:
        '200':
          description: get Field_Information Workspace data to be returned
          content:
            application/json:
              example:
                Id: 1
                Afe_number: 1
                Fi_id: 1
  /Field-Information-workspace/{id}:
    parameters:
    - in: path
      name: id
      required: true
      description: id of Field_Information data to fetch
      schema:
        type: interger
    put:
      security:
      - Authorization: []
      tags:
      - Workspace
      summary: Update a new Field_Information Workspace data
      description: Update a new Field_Information Workspace Workspace data
      requestBody:
        required: true
        description: Request body to update Field_Information data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field_Information'
            example:
              Id: 1
              Afe_number: 1
              Fi_id: 1
      responses:
        '200':
          description: Field_Information Workspace data is completely updated
          content:
            application/json:
              example:
                message: The Field_Information Workspace data is completely updated
    patch:
      security:
      - Authorization: []
      tags:
      - Workspace
      summary: Update a new Field_Information data
      description: Update a new Field_Information data
      requestBody:
        required: true
        description: Request body to update Field_Information data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field_Information'
            example:
              Id: 1
              Afe_number: 1
              Fi_id: 1
      responses:
        '200':
          description: one row in Field_Information data is updated
          content:
            application/json:
              example:
                message: The one row in Field_Information Workspace data is updated
    delete:
      security:
      - Authorization: []
      tags:
      - Workspace
      summary: Delete Field_Information Workspace data
      description: Delete Field_Information data
      responses:
        '200':
          description: Field_Information Workspace data is deleted
          content:
            application/json:
              example:
                message: The Field_Information Workspace data was successfully deleted
  /Field-Information:
    get:
      security:
      - Authorization: []
      tags:
      - Field Information
      summary: Get Field_Information
      responses:
        '200':
          description: get Field_Information data to be returned
          content:
            application/json:
              example:
                Area_id: LoremIpsum
                Area_type: LoremIpsum
                Field_name: LoremIpsum
                Discovery_date: LoremIpsum
                Field_type: LoremIpsum
                Original_file_name: LoremIpsum
                Password: LoremIpsum
                Digital_size: LoremIpsum
                Digital_size_uom: LoremIpsum
                Media_type: LoremIpsum
                Data_store_name: LoremIpsum
                Remark: LoremIpsum
                Qc_status: LoremIpsum
                Checked_by_ba_id: LoremIpsum
    post:
      security:
      - Authorization: []
      tags:
      - Field Information
      summary: Post a new Field_Information
      description: Create a new Field_Information data
      requestBody:
        required: true
        description: Request body to create Field_Information data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field_Information'
            example: []
      responses:
        '200':
          description: Field_Information data is added
          content:
            application/json:
              example:
                message: The Field_Information data was successfully added
  /Field-Information/{id}:
    parameters:
    - in: path
      name: id
      required: true
      description: id of Field_Information data to fetch
      schema:
        type: interger
    get:
      security:
      - Authorization: []
      tags:
      - Field Information
      summary: Get Field_Information
      responses:
        '200':
          description: get Field_Information data to be returned
          content:
            application/json:
              example:
              - []
    put:
      security:
      - Authorization: []
      tags:
      - Field Information
      summary: Update a new Field_Information data
      description: Update a new Field_Information data
      requestBody:
        required: true
        description: Request body to update Field_Information data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field_Information'
            example: []
      responses:
        '200':
          description: Field_Information data is completely updated
          content:
            application/json:
              example:
                message: The Field_Information data is completely updated
    patch:
      security:
      - Authorization: []
      tags:
      - Field Information
      summary: Update a new Field_Information data
      description: Update a new Field_Information data
      requestBody:
        required: true
        description: Request body to update Field_Information data
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Field_Information'
            example: []
      responses:
        '200':
          description: one row in Field_Information data is updated
          content:
            application/json:
              example:
                message: The one row in Field_Information data is updated
    delete:
      security:
      - Authorization: []
      tags:
      - Field Information
      summary: Delete Field_Information data
      description: Delete Field_Information data
      responses:
        '200':
          description: Field_Information data is deleted
          content:
            application/json:
              example:
                message: The Field_Information data was successfully deleted
  /Field-Information/{num}:
    parameters:
    - in: path
      name: num
      required: true
      description: number of dummy data to add
      schema:
        type: interger
    get:
      security:
      - Authorization: []
      tags:
      - Field Information Dummy Data
      summary: Add dummy data to Field_Information
      responses:
        '200':
          description: add data to Field_Information
          content:
            application/json: {}
components:
  schemas:
    afe:
      type: array
      items:
        type: object
        properties:
          afe_number:
            type: integer
          workspace_name:
            type: string
          kkks_name:
            type: string
          working_area:
            type: string
          submission_type:
            type: string
          data_type:
            type: string
    Field_Information_workspace:
      type: array
      items:
        type: object
        properties:
          id:
            type: integer
          afe_number:
            type: integer
          Fi_id:
            type: integer
    Field_Information:
      type: object
      properties:
        Area_id:
          type: string
        Area_type:
          type: string
        Field_name:
          type: string
        Discovery_date:
          type: string
        Field_type:
          type: string
        Original_file_name:
          type: string
        Password:
          type: string
        Digital_size:
          type: string
        Digital_size_uom:
          type: string
        Media_type:
          type: string
        Data_store_name:
          type: string
        Remark:
          type: string
        Qc_status:
          type: string
        Checked_by_ba_id:
          type: string
  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Please enter the access token
